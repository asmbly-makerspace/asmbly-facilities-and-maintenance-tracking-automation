# template.yaml
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  A collection of Lambda functions for PM automation tasks,
  fetching data from ClickUp and sending notifications to Slack.

Globals:
  Function:
    Runtime: python3.12
    MemorySize: 128

Resources:
  # 1. Define the API Gateway for the new reorder functions
  FacilitiesApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod

  # 2. Define the Shared Lambda Layer
  RequestsLambdaLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: requests-layer
      Description: "Shared layer containing the requests library"
      ContentUri: layers/requests_layer/
      CompatibleRuntimes:
        - python3.12
      RetentionPolicy: Retain

  # NOTE: The following function 'GetClickUpTasksFunction' is currently commented out.
  # It is associated with a manually created API Gateway (ID: jvh3lxcpf7).
  # To manage this function with SAM, the API Gateway must also be imported into or
  # recreated by this SAM template. This change requires careful coordination
  # to avoid disrupting the existing public endpoint.
  #
  # GetClickUpTasksFunction:
  #   Type: AWS::Serverless::Function
  #   Properties:
  #     FunctionName: KilnOpsDropoffRecentEntriesViewer
  #     Description: "https://gist.github.com/sababado/aa8c92c0f9f4488c701523c6fd995c6b"
  #     CodeUri: functions/kiln_dropoff_recent_entries_viewer/
  #     Handler: lambda_function.lambda_handler
  #     Runtime: python3.12
  #     Timeout: 10
  #     Role: arn:aws:iam::110104886034:role/KilnOpsDropoffViewerLambdaRole
  #     Layers:
  #       - !Ref RequestsLambdaLayer
  #     Environment:
  #       Variables:
  #         SECRET_NAME: clickup/api/token
  #         CLICKUP_LIST_KILNDROP_ID: 901318902829
  #     Events:
  #       ApiTrigger:
  #         Type: Api
  #         Properties:
  #           Path: /KilnOpsDropoffRecentEntriesViewer
  #           Method: get
  #           RestApiId: jvh3lxcpf7 # <-- This hardcoded ID causes a SAM build error.
  #     Tags:
  #       Project: kilnops-dropoff-viewer
  #       Workspace: ceramics

  # 3. Define the IAM Role for the PMReminderBot
  PMReminderBotLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: PMReminderBotLambdaRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: PMReminderBotPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: 'arn:aws:logs:*:*:*'
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                Resource:
                  - !Sub 'arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:clickup/api/token-*'
                  - !Sub 'arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:prod/slack-maintenance-bot-token-*'
      Tags:
        - Key: Project
          Value: pm-reminder-bot
        - Key: Workspace
          Value: facilities

  # 4. Define the Slack Poster Lambda Function (Scheduled)
  PostSlackMessagesFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: PMReminderBot
      Description: "https://gist.github.com/sababado/78b9714938e1f4ef001361654b8464e2"
      CodeUri: functions/pm_bot_reminder/
      Handler: lambda_function.lambda_handler
      Runtime: python3.12
      Timeout: 180
      Role: !GetAtt PMReminderBotLambdaRole.Arn # Use the role defined in this template
      Layers:
        - !Ref RequestsLambdaLayer
      Environment:
        Variables:
          ASSET_FIELD_NAME: 'Asset (P)'
          BOT_ICON_EMOJI: ':hammer_and_wrench:'
          BOT_NAME: 'PM Bot'
          CLICKUP_LIST_ID: '901310894771'
          CLICKUP_SECRET_NAME: 'clickup/api/token'
          FREQUENCY_FIELD_NAME: 'Frequency'
          GENERAL_CHANNEL_NAME: 'stewards'
          SLACK_MAINTENANCE_BOT_SECRET_NAME: 'prod/slack-maintenance-bot-token'
          WORKSPACE_FIELD_NAME: 'Workspace'
          WORKSPACES: '3d-printing,ceramics,electronics,lasers,metal-shop,textiles,woodshop'
          STARTER_MESSAGE_TEXT: |
            Weekly task update!
            * Mark tasks with :loading: to show that they're being worked on!
            * Mark tasks with :white_check_mark: to call them done!
      Events:
        ScheduledRun:
          Type: Schedule
          Properties:
            Schedule: "cron(30 4 ? * SAT *)"
            Description: "Triggers the lambda task fetcher every Saturday morning"
      Tags:
        Project: pm-reminder-bot
        Workspace: facilities

  # 5. Define the IAM Role for the FacilitiesItemReorder Lambdas
  FacilitiesItemReorderLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: FacilitiesItemReorderLambdaRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: FacilitiesItemReorderPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: 'arn:aws:logs:*:*:*'
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                Resource:
                  - !Sub 'arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:clickup/api/token-*'
                  - !Sub 'arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:prod/slack-maintenance-bot-token-*'
      Tags:
        - Key: Project
          Value: facilities-item-reorder
        - Key: Workspace
          Value: facilities

  # 6. Define the Facilities Item Reorder GET Lambda Function
  FacilitiesItemReorderGetFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: FacilitiesItemReorder_Get
      Description: "Triggered by a Slack command, this function fetches a list of reorderable items from a ClickUp list. It then presents these items in an interactive Slack modal, allowing users to search and select an item for reordering."
      CodeUri: functions/facilities_item_reorder_get/
      Handler: lambda_function.lambda_handler
      Runtime: python3.12
      MemorySize: 512 # Increased memory to speed up cold starts and execution
      Timeout: 10
      Role: !GetAtt FacilitiesItemReorderLambdaRole.Arn
      Layers:
        - !Ref RequestsLambdaLayer
      Environment:
        Variables:
          CLICKUP_SECRET_NAME: 'clickup/api/token'
          SLACK_MAINTENANCE_BOT_SECRET_NAME: 'prod/slack-maintenance-bot-token'
          LIST_ID: '901320662208'
      Events:
        ApiTrigger:
          Type: Api
          Properties:
            Path: /FacilitiesItemReorder_Get
            Method: post # using this to return a slack modal, so this must be a post type.
            RestApiId: !Ref FacilitiesApi
      Tags:
        Project: facilities-item-reorder
        Workspace: facilities

  # 7. Define the Facilities Item Reorder POST Lambda Function
  FacilitiesItemReorderPostFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: FacilitiesItemReorder_Post
      Description: "Handles the submission event from the Slack reorder modal. It extracts the selected item's details, creates a new purchase request task in a separate ClickUp list, and displays a confirmation message back to the user in the modal."
      CodeUri: functions/facilities_item_reorder_post/
      Handler: lambda_function.lambda_handler
      Runtime: python3.12
      Timeout: 10
      Role: !GetAtt FacilitiesItemReorderLambdaRole.Arn
      Layers:
        - !Ref RequestsLambdaLayer
      Environment:
        Variables:
          CLICKUP_SECRET_NAME: 'clickup/api/token'
          SLACK_MAINTENANCE_BOT_SECRET_NAME: 'prod/slack-maintenance-bot-token'
          PURCHASE_REQUEST_LIST_ID: '901310302436'
      Events:
        ApiTrigger:
          Type: Api
          Properties:
            Path: /FacilitiesItemReorder_Post
            Method: post
            RestApiId: !Ref FacilitiesApi
      Tags:
        Project: facilities-item-reorder
        Workspace: facilities

# Add this entire section to the end of your file
Outputs:
  FacilitiesApiUrl:
    Description: "The invoke URL for the Facilities API Gateway"
    Value: !Sub "https://${FacilitiesApi}.execute-api.${AWS::Region}.amazonaws.com/Prod"
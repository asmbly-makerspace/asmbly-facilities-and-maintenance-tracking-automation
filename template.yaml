AWSTemplateFormatVersion: '2010-09-09'
Transform:
  - AWS::LanguageExtensions
  - AWS::Serverless-2016-10-31
Description: >
  A collection of Lambda functions for Asmbly automation tasks,
  organized by job type.

Globals:
  Function:
    Runtime: python3.12
    MemorySize: 128

Parameters:
  Stage:
    Type: String
    Description: The deployment stage (e.g., dev, stage, prod).
    Default: dev
    AllowedValues:
      - dev
      - stage
      - prod

Resources:
  FacilitiesApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Stage
      DefinitionBody:
        openapi: '3.0.1'
        info:
          title: 'Asmbly Facilities API'
          version: '1.0'
        paths:
          /SlackSlashReorder:
            post:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri:
                  Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PurchaseRequestStack.Outputs.SlackSlashReorderFunctionArn}/invocations"
              responses: {}
          /KilnOpsDropoffRecentEntriesViewer:
            get:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri:
                  Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CeramicsStack.Outputs.KilnDropoffViewerFunctionArn}/invocations"
              responses: {}
          /purchase-request/slack-reaction:
            post:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri:
                  Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PurchaseRequestStack.Outputs.PurchaseRequestReactionFunctionArn}/invocations"
              responses: {}
#          /problem-report/slack-reaction:
#            post:
#              x-amazon-apigateway-integration:
#                httpMethod: POST
#                type: aws_proxy
#                uri:
#                  Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ProblemReportStack.Outputs.ProblemReportReactionFunctionArn}/invocations"
#              responses: {}

  RequestsLambdaLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: !Sub "requests-layer-${Stage}"
      Description: "Shared layer containing the requests library"
      ContentUri: layers/requests_layer/
      CompatibleRuntimes:
        - python3.12
      RetentionPolicy: Retain

  CommonLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: !Sub "common-layer-${Stage}"
      Description: "Shared layer for common utilities (aws, clickup, slack)"
      ContentUri: layers/common/
      CompatibleRuntimes:
        - python3.12
      RetentionPolicy: Retain

  ReactionMapPurchaseRequestParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/config/${Stage}/reaction-handler/purchase-request"
      Type: String
      Description: "JSON mapping of reactions to statuses for purchase requests."
      Value:
        Fn::ToJsonString:
          Fn::Transform:
            Name: 'AWS::Include'
            Parameters:
              Location: ./configs/reactions_purchase_request.json
      Tags:
        Project: slack-reaction-purchase-request
        Workspace: facilities
        Stage: !Ref Stage

  ReactionMapProblemReportParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/config/${Stage}/reaction-handler/problem-report"
      Type: String
      Description: "JSON mapping of reactions to statuses for problem reports."
      Value:
        Fn::ToJsonString:
          Fn::Transform:
            Name: 'AWS::Include'
            Parameters:
              Location: ./configs/reactions_problem_report.json
      Tags:
        Project: slack-reaction-problem-report
        Workspace: facilities
        Stage: !Ref Stage

  FacilitiesStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: ./templates/facilities.yaml
      Parameters:
        Stage: !Ref Stage
        CommonLayerARN: !Ref CommonLayer
        RequestsLayerARN: !Ref RequestsLambdaLayer

  PurchaseRequestStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: ./templates/purchase_request.yaml
      Parameters:
        Stage: !Ref Stage
        CommonLayerARN: !Ref CommonLayer
        RequestsLayerARN: !Ref RequestsLambdaLayer

  CeramicsStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: ./templates/ceramics.yaml
      Parameters:
        Stage: !Ref Stage
        CommonLayerARN: !Ref CommonLayer
        RequestsLayerARN: !Ref RequestsLambdaLayer

#  ProblemReportStack:
#    Type: AWS::Serverless::Application
#    Properties:
#      Location: ./templates/problem_report.yaml
#      Parameters:
#        Stage: !Ref Stage
#        CommonLayerARN: !Ref CommonLayer
#        RequestsLayerARN: !Ref RequestsLambdaLayer

  PurchaseRequestInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt PurchaseRequestStack.Outputs.SlackSlashReorderFunctionArn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${FacilitiesApi}/*/*"

  PurchaseRequestReactionInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt PurchaseRequestStack.Outputs.PurchaseRequestReactionFunctionArn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${FacilitiesApi}/*/*"

#  ProblemReportReactionInvokePermission:
#    Type: AWS::Lambda::Permission
#    Properties:
#      FunctionName: !GetAtt ProblemReportStack.Outputs.ProblemReportReactionFunctionArn
#      Action: lambda:InvokeFunction
#      Principal: apigateway.amazonaws.com
#      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${FacilitiesApi}/*/*"

  CeramicsInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt CeramicsStack.Outputs.KilnDropoffViewerFunctionArn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${FacilitiesApi}/*/*"

Outputs:
  FacilitiesApiUrl:
    Description: "The invoke URL for the Facilities API Gateway"
    Value: !Sub "https://${FacilitiesApi}.execute-api.${AWS::Region}.amazonaws.com/${Stage}"